apply plugin: 'application'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = "geosparql_fuseki.Main"
}
mainClassName = "geosparql_fuseki.Main"

repositories {
    mavenLocal()
    mavenCentral()
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
}

dependencies {
    ext.slf4jVersion = "1.7.25"
    implementation "org.slf4j:jcl-over-slf4j:$slf4jVersion"

    ext.jenaVersion = "3.8.0"
    //implementation "org.apache.jena:apache-jena-libs:$jenaVersion"
    //Issue resolving apache-jena-libs in Maven projects. Use individual modules as provide jars.
    implementation "org.apache.jena:jena-core:$jenaVersion"
    implementation "org.apache.jena:jena-arq:$jenaVersion"
    implementation "org.apache.jena:jena-iri:$jenaVersion"
    implementation "org.apache.jena:jena-tdb:$jenaVersion"

    implementation (group: 'org.apache.jena', name: 'jena-fuseki-embedded', version: jenaVersion){
        exclude group: "org.apache.jena", module: "apache-jena-libs"
        exclude group: "org.slf4j", module: "slf4j-log4j12"
    }

    ext.jcommanderVersion = "1.72"
    implementation "com.beust:jcommander:$jcommanderVersion"

    ext.logbackVersion = "1.2.3"
    testImplementation "ch.qos.logback:logback-classic:$logbackVersion"

    ext.junitVersion = "4.12"
    testImplementation "junit:junit:$junitVersion"

    ext.commonsCollectionsVersion = "4.2"
    implementation "org.apache.commons:commons-collections4:$commonsCollectionsVersion"

    //GeoSPARQL Extension
    ext.geosparqlVersion = "1.0.0"
    implementation "io.github.galbiston:GeoSPARQLJena:$geosparqlVersion"
}

group = 'io.github.galbiston'
version = '1.0.0'

apply plugin: 'maven-publish'
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

build.finalizedBy(publishToMavenLocal)

run {
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}